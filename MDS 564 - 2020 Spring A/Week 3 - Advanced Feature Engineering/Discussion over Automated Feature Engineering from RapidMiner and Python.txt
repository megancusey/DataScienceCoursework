Both RapidMinir and Python have ways that seek to automate some functionality of the feature engineering process.

RapidMinir appears to attempt to provide almost an end to end solution. It allows you to import a dataset, select the Feature Automation feature and also produce the results in an AutoModel. The Feature Automation tool seeks to not only produce new features that leverage interactivity between features, but also selects the most important combination of features. AutoModel runs the results of this into a series of models and also hyperparameterizes the results.

Python has a series of tools that aid in model selection and model tuning, but the star of Will Koehrsen's blog, "Automated Feature Engineering in Python", was a package called featuretools. Featuretools allows us to create sort of a entity-relationship between multiple dataframes and create parent-child relationships. Featuretools then imposes a variety of feature primitives to these tables, sometimes multiple in one table. This could be in the form of functions such as the month of a date, last, max, min, sum, etc. In the example provided, what originally had 10-15 features between 3 tables resulted in over 700 features. To an extent, I feel like this is still a bit overwhelming and it could create more complicated features than necessary.

While I think automating feature engineering is a very interesting concept and can be really helpful, I believe it's probably best to tred lightly. Feature Engineering is harder to address manually when there are many features, but doing an automated feature approach also seems to produce only an abundance of features. RapidMinir also automatically reduces the features, but there's likely a trade off between understandability when software is doing the whole end to end process.

Some Cons: Neither approaches inserts domain knowledge. With too many features, the automated approach is computationally expensive. An alternative is to select features to choose to input into the automated feature engineering tool.